import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Menu1 menu1 = new Menu1();
        Menu2 menu2 = new Menu2();
        Map<String, Menu> menus = new HashMap<>();
        menus.put("1", menu1);
        menus.put("2", menu2);
        String choice = "";
        while (!choice.equals("q")) {
            System.out.println("Choose a menu:");
            System.out.println("1. Menu 1");
            System.out.println("2. Menu 2");
            System.out.println("q. Quit");
            choice = scanner.nextLine();
            if (menus.containsKey(choice)) {
                Menu menu = menus.get(choice);
                String command = "";
                while (!command.equals("q")) {
                    menu.displayMenu();
                    command = scanner.nextLine();
                    if (menu.acceptedCommands.contains(command)) {
                        menu.executeCommand(command, USER);
                    } else {
                        System.out.println("Invalid command.");
                    }
                }
            } else if (!choice.equals("q")) {
                System.out.println("Invalid menu.");
            }
        }
    }
}

interface Menu {
    Set<String> acceptedCommands = new HashSet<>();
    void displayMenu();
    void executeCommand(String command);
}

class Menu1 implements Menu {
    public Menu1() {
        acceptedCommands.add("a");
        acceptedCommands.add("b");
        acceptedCommands.add("q");
    }
    public void displayMenu() {
        System.out.println("Menu 1");
        System.out.println("a. Option A");
        System.out.println("b. Option B");
        System.out.println("q. Quit");
    }
    public void executeCommand(String command) {
        switch (command) {
            case "a":
                System.out.println("You chose option A.");
                break;
            case "b":
                System.out.println("You chose option B.");
                break;
            case "q":
                break;
        }
    }
}

class Menu2 implements Menu {
    public Menu2() {
        acceptedCommands.add("x");
        acceptedCommands.add("y");
        acceptedCommands.add("z");
        acceptedCommands.add("q");
    }
    public void displayMenu() {
        System.out.println("Menu 2");
        System.out.println("x. Option X");
        System.out.println("y. Option Y");
        System.out.println("z. Option Z");
        System.out.println("q. Quit");
    }
    public void executeCommand(String command) {
        switch (command) {
            case "x":
                System.out.println("You chose option X.");
                break;
            case "y":
                System.out.println("You chose option Y.");
                break;
            case "z":
                System.out.println("You chose option Z.");
                break;
            case "q":
                break;
    }
}


import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Map<String, Menu> menus = new HashMap<>();
        Menu1 menu1 = new Menu1(menus);
        Menu2 menu2 = new Menu2(menus);
        Home home = new Home(menus);
        menus.put("1", menu1);
        menus.put("2", menu2);
        Menu currentMenu = menu1;
        String choice = "";
        while (!choice.equals("q")) {
            currentMenu.displayMenu();
            if (currMenu.equals("login")) {
                if (currentMenu.getLoggedIn() == true) {
                    currentMenu = home;
                }
            }
            else {
                choice = scanner.nextLine();
            if (currentMenu.acceptedCommands.contains(choice)) {
                currentMenu.executeCommand(choice);
            } else if (menus.containsKey(choice)) {
                currentMenu = menus.get(choice);
            } else {
                System.out.println("Invalid command.");
            }
            }
            
        }
    }
}
In this example, Menu1 and Menu2 objects are created before the loop and stored in the menus map using the keys "1" and "2", respectively. When the user chooses to go to Menu2, the program sets currentMenu to the Menu2 object from the menus map. This way, you can navigate between menus without creating new objects each time.





import java.util.*;

public class LoginMenu implements Menu {
    Set<String> acceptedCommands;
    Scanner scanner;
    Map<String, Menu> menus;
    Map<String, String> users;
    
    public LoginMenu(Map<String, Menu> menus) {
        this.acceptedCommands = new HashSet<>(Arrays.asList("login", "register"));
        this.scanner = new Scanner(System.in);
        this.menus = menus;
        this.users = new HashMap<>();
        // Add some default users for testing
        this.users.put("user1", "password1");
        this.users.put("user2", "password2");
    }
    
    public void displayMenu() {
        System.out.println("=== Login Menu ===");
        System.out.println("login - Login with existing account");
        System.out.println("register - Register a new account");
        System.out.println("q - Quit");
    }
    
    public void executeCommand(String command) {
        switch(command) {
            case "login":
                login();
                break;
            case "register":
                register();
                break;
            case "q":
                break;
            default:
                System.out.println("Invalid command.");
                break;
        }
    }
    
    private void login() {
        System.out.println("Enter username:");
        String username = scanner.nextLine();
        System.out.println("Enter password:");
        String password = scanner.nextLine();
        if (users.containsKey(username) && users.get(username).equals(password)) {
            System.out.println("Login successful.");
            if (menus.containsKey("main")) {
                Menu mainMenu = menus.get("main");
                mainMenu.run();
            } else {
                System.out.println("Main menu not found.");
            }
        } else {
            System.out.println("Invalid username or password.");
        }
    }
    
    private void register() {
        System.out.println("Enter username:");
        String username = scanner.nextLine();
        if (users.containsKey(username)) {
            System.out.println("Username already taken.");
        } else {
            System.out.println("Enter password:");
            String password = scanner.nextLine();
            users.put(username, password);
            System.out.println("Account created.");
        }
    }
}
